{
    "docs": [
        {
            "location": "/", 
            "text": "Package MESH\n\n\nM\nultilayer \nE\nlectromagnetic \nS\nolver for \nH\neat transfer.\n\n\nA program for computing electromagnetic far-field and near-field heat transfer periodic, layered\nstructures, developed by Kaifeng Chen (\n) of the\n\nFan group\n in the Stanford Electrical Engineering Department.\n\n\nThe program is built upon C++ and wrapped with Lua (\n= 5.2), with OpenMP and MPI support. It is enabled with heat flux calculation in both far and near field, along with implementations about structure visualization with \nPOVRay\n. This documents will cover the basic idea over MESH, a complete description of the Lua API and C++ API, and a few concrete examples either created to illustrate the simple usage or reproducing some results from existing literatures. The documents are organized as follows:\n\n\nOverview\n\n\n\n\nFeatures\n: detailed features and equations offered by the package.\n\n\nInstallation\n: the installation steps on different platforms and clusters.\n\n\n\n\nLua API\n\n\n\n\nBase Class\n: the base class the code is built upon.\n\n\nSimulationPlanar\n: the inherited class computing planar geometries\n\n\nSimulationGrating\n: the inherited class computing 1D grating geometries.\n\n\nSimulationPattern\n: the inherited class computing 2D pattern geometries\n\n\n\n\nC++ API\n\n\n\n\nC++ classes and functions\n: the C++ interface for all the functions.\n\n\n\n\nExamples\n\n\n\n\nTutorial Example\n: a simple tutorial about how to setup the inputs and run the input script\n\n\nSingle Plane Far-field\n: example about how to compute thermal radiation to the far field.\n\n\nTwo Planes Near-field\n: example about how to compute near-field heat transfer between two planes.\n\n\nAnisotropic Material Near-field\n: example about how to use anisotropic material\n\n\nIterate Over Gaps Near-field\n: example about how to iterate over different gaps for near-field heat transfer between two plates.\n\n\nTwo Gratings Near-field\n: example about how to setup the calculation between two grating structures in the near-field regime.\n\n\nTwo Rectangle Patterns Near-field\n: example about the near-field heat transfer between two rectangle patterned structures\n\n\nMixed Patterns Near-field\n: example about the near-field heat transfer between two structures with different kinds of patterns (rectangle and circle).\n\n\nMPI Example\n: example about how to use Lua wrapped MPI interface for fast parallelization on distributed clusters.\n\n\n\n\nOther information\n\n\n\n\nDeveloper\n: information for developers on how to contribute to MESH\n\n\nAbout\n: Information about the author, license, copyrights and contact addresses.", 
            "title": "Home"
        }, 
        {
            "location": "/#package-mesh", 
            "text": "M ultilayer  E lectromagnetic  S olver for  H eat transfer.  A program for computing electromagnetic far-field and near-field heat transfer periodic, layered\nstructures, developed by Kaifeng Chen ( ) of the Fan group  in the Stanford Electrical Engineering Department.  The program is built upon C++ and wrapped with Lua ( = 5.2), with OpenMP and MPI support. It is enabled with heat flux calculation in both far and near field, along with implementations about structure visualization with  POVRay . This documents will cover the basic idea over MESH, a complete description of the Lua API and C++ API, and a few concrete examples either created to illustrate the simple usage or reproducing some results from existing literatures. The documents are organized as follows:", 
            "title": "Package MESH"
        }, 
        {
            "location": "/#overview", 
            "text": "Features : detailed features and equations offered by the package.  Installation : the installation steps on different platforms and clusters.", 
            "title": "Overview"
        }, 
        {
            "location": "/#lua-api", 
            "text": "Base Class : the base class the code is built upon.  SimulationPlanar : the inherited class computing planar geometries  SimulationGrating : the inherited class computing 1D grating geometries.  SimulationPattern : the inherited class computing 2D pattern geometries", 
            "title": "Lua API"
        }, 
        {
            "location": "/#c-api", 
            "text": "C++ classes and functions : the C++ interface for all the functions.", 
            "title": "C++ API"
        }, 
        {
            "location": "/#examples", 
            "text": "Tutorial Example : a simple tutorial about how to setup the inputs and run the input script  Single Plane Far-field : example about how to compute thermal radiation to the far field.  Two Planes Near-field : example about how to compute near-field heat transfer between two planes.  Anisotropic Material Near-field : example about how to use anisotropic material  Iterate Over Gaps Near-field : example about how to iterate over different gaps for near-field heat transfer between two plates.  Two Gratings Near-field : example about how to setup the calculation between two grating structures in the near-field regime.  Two Rectangle Patterns Near-field : example about the near-field heat transfer between two rectangle patterned structures  Mixed Patterns Near-field : example about the near-field heat transfer between two structures with different kinds of patterns (rectangle and circle).  MPI Example : example about how to use Lua wrapped MPI interface for fast parallelization on distributed clusters.", 
            "title": "Examples"
        }, 
        {
            "location": "/#other-information", 
            "text": "Developer : information for developers on how to contribute to MESH  About : Information about the author, license, copyrights and contact addresses.", 
            "title": "Other information"
        }, 
        {
            "location": "/features/", 
            "text": "", 
            "title": "Features"
        }, 
        {
            "location": "/installation/", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/LuaAPI/baseClass/", 
            "text": "", 
            "title": "Base Class"
        }, 
        {
            "location": "/LuaAPI/planar/", 
            "text": "", 
            "title": "SimulationPlanar"
        }, 
        {
            "location": "/LuaAPI/grating/", 
            "text": "", 
            "title": "SimulationGrating"
        }, 
        {
            "location": "/LuaAPI/pattern/", 
            "text": "", 
            "title": "SimulationPattern"
        }, 
        {
            "location": "/C++API/classAndFunction/", 
            "text": "", 
            "title": "Classes and Functions"
        }, 
        {
            "location": "/Examples/tutorial/", 
            "text": "", 
            "title": "Tutorial Example"
        }, 
        {
            "location": "/Examples/planeFarField/", 
            "text": "", 
            "title": "Single Plane Far-field"
        }, 
        {
            "location": "/Examples/planeNearField/", 
            "text": "", 
            "title": "Two Planes Near-field"
        }, 
        {
            "location": "/Examples/anisotropic/", 
            "text": "", 
            "title": "Anisotropic Material Near-field"
        }, 
        {
            "location": "/Examples/iterate/", 
            "text": "", 
            "title": "Iterate Over Gaps Near-field"
        }, 
        {
            "location": "/Examples/gratingNearField/", 
            "text": "", 
            "title": "Two Gratings Near-field"
        }, 
        {
            "location": "/Examples/rectangleNearField/", 
            "text": "", 
            "title": "Two Rectangle Patterns Near-field"
        }, 
        {
            "location": "/Examples/mixedNearField/", 
            "text": "", 
            "title": "Mixed Patterns Near-field"
        }, 
        {
            "location": "/Examples/MPI/", 
            "text": "", 
            "title": "MPI Example"
        }, 
        {
            "location": "/develop/", 
            "text": "", 
            "title": "Developer"
        }, 
        {
            "location": "/about/", 
            "text": "MESH is copyright (c) 2016-2018, Stanford University.\n\n\nMESH is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\n\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\n\nYou should have received a copy of the GNU General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. You can also find it on the GNU web site:\n\n\nhttp://www.gnu.org/copyleft/gpl.html\n\n\nThe author would like to acknowledge the following packages:\n\n\n\n\n\n\narmadillo: \nC++ linear algebra library\n\n\n\n\n\n\nluawrapper: \nThe lua wrapper for C++ classes\n\n\n\n\n\n\nlua-mpi: \nThe lua wrapper for MPI", 
            "title": "About"
        }
    ]
}