CC = mpicc
CXX = mpic++ -std=c++11
CPPFLAGS += -Isrc/

#### Compilation targets
MESH_LIBNAME = libmesh.a
all: $(OBJDIR)/$(MESH_LIBNAME) $(OBJDIR)/MESH

objdir:
	mkdir -p $(OBJDIR)
	mkdir -p $(OBJDIR)/MESHk

MESH_LIBOBJS = \
	$(OBJDIR)/MESHk/gauss_legendre.o \
	$(OBJDIR)/MESHk/Rcwa.o \
	$(OBJDIR)/MESHk/System.o \
	$(OBJDIR)/MESHk/Mesh.o \
	$(OBJDIR)/MESHk/grating1.o \

$(OBJDIR)/libmesh.a: objdir $(MESH_LIBOBJS)
	$(AR) crvs $@ $(MESH_LIBOBJS)
$(OBJDIR)/MESHk/gauss_legendre.o: src/gauss_legendre.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/MESHk/Rcwa.o: src/Rcwa.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $< -o $@ $(LA_LIBS)
$(OBJDIR)/MESHk/System.o: src/System.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/MESHk/Mesh.o: src/Mesh.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $< -o $@ $(LA_LIBS)
$(OBJDIR)/MESHk/grating2.o: grating1.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $< -o $@ $(LA_LIBS)


#### Build Lua frontend
$(OBJDIR)/MESH: $(OBJDIR)/MESHk/grating1.o $(OBJDIR)/$(MESH_LIBNAME)
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) $< -o $@ -L$(OBJDIR) -lmesh $(LA_LIBS)

#### Python extension

clean:
	rm -rf $(OBJDIR)

always: