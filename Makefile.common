### The following must be defined already:
#   CC
#   CXX
#   LUA_INC
#   LUA_LIB
#   LA_LIBS
#   OBJDIR
#   SHLIB_EXT (so, dll)
#   SHLIB_FLAGS

CPPFLAGS += -Isrc/
ARMAFLAG = -Isrc/arma -DARMA_DONT_USE_WRAPPER -DARMA_NO_DEBUG

#### Compilation targets
MESH_LIBNAME = libmesh.a
all: $(OBJDIR)/$(MESH_LIBNAME)  $(OBJDIR)/mesh
meshMPI: $(OBJDIR)/meshMPI

objdir:
	mkdir -p $(OBJDIR)
	mkdir -p $(OBJDIR)/MESH_o

MESH_LIBOBJS = \
	$(OBJDIR)/MESH_o/Rcwa.o \
	$(OBJDIR)/MESH_o/Cubature.o \
	$(OBJDIR)/MESH_o/System.o \
	$(OBJDIR)/MESH_o/Fmm.o \
	$(OBJDIR)/MESH_o/Mesh.o

$(OBJDIR)/libmesh.a: objdir $(MESH_LIBOBJS)
	$(AR) crvs $@ $(MESH_LIBOBJS)
$(OBJDIR)/MESH_o/Rcwa.o: src/Rcwa.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $(ARMAFLAG) $< -o $@ $(LA_LIBS)
$(OBJDIR)/MESH_o/Cubature.o: src/Cubature.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(ARMAFLAG) $< -o $@ $(LA_LIBS)
$(OBJDIR)/MESH_o/System.o: src/System.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $(ARMAFLAG) $< -o $@ $(LA_LIBS)
$(OBJDIR)/MESH_o/Fmm.o: src/Fmm.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $(ARMAFLAG) $< -o $@ $(LA_LIBS)
$(OBJDIR)/MESH_o/Mesh.o: src/Mesh.cpp
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $(ARMAFLAG) $< -o $@ $(LA_LIBS)


#### Build Lua frontend

$(OBJDIR)/MESH_o/main_lua.o: src/main_lua.cpp objdir
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $(LUA_INC) $(ARMAFLAG) $< -o $@ $(LA_LIBS)
$(OBJDIR)/mesh: $(OBJDIR)/MESH_o/main_lua.o $(OBJDIR)/$(MESH_LIBNAME)
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(ARMAFLAG) $< -o $@ -L$(OBJDIR) -lmesh $(LA_LIBS) $(LUA_LIB)

$(OBJDIR)/MESH_o/main_lua_mpi.o: src/main_lua.cpp objdir
	$(CXX) -c -DHAVE_MPI $(CXXFLAGS) $(CPPFLAGS) $(LUA_INC) $(ARMAFLAG) $< -o $@ $(LA_LIBS)
$(OBJDIR)/meshMPI: $(OBJDIR)/MESH_o/main_lua_mpi.o $(OBJDIR)/$(MESH_LIBNAME)
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(ARMAFLAG) $< -o $@ -L$(OBJDIR) -lmesh $(LA_LIBS) $(LUA_LIB)

clean:
	rm -rf $(OBJDIR)

always:
